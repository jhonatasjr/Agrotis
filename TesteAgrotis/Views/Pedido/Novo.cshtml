@model TesteAgrotis.Models.Pedido

@{
    List<Produto> lstProdutos = ViewBag.LstProdutos ?? new List<Produto>();
}


<h2 class="mb-3">Novo Pedido</h2>

<div id="mensagemErro" class="alert alert-danger d-none" role="alert">
</div>

<form asp-action="SalvarPedido" method="post" class="needs-validation" novalidate>
    <div class="row mb-3">

        <div class="col-md-12">
            <label asp-for="ClienteId" class="form-label">Cliente</label>
            @Html.DropDownList("IdCliente", new SelectList(ViewBag.LstClientes, "Value", "Text", 0), "Selecione um Cliente", new { @class = "form-control" })
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label class="form-label">Peso Total</label>
            <input type="text" class="form-control" id="pesoTotalCampo" readonly>
        </div>
        <div class="col-md-6">
            <label class="form-label">Valor Total</label>
            <input type="text" class="form-control" id="valorTotalCampo" readonly>
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="Observacao" class="form-label">Descrição do Pedido</label>
        <textarea asp-for="Observacao" class="form-control" rows="4"></textarea>
    </div>

    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#adicionarProdutoModal">
        Selecionar Produto
    </button>

    <!-- Tabela para mostrar os produtos selecionados no modal -->
    <table class="table mt-3 table-bordered table-hover table-striped" id="tabelaProdutosSelecionados" style="display: none;">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Cód.</th>
                <th scope="col">Nome</th>
                <th scope="col">Quantidade</th>
                <th scope="col">Peso Total</th>
                <th scope="col">Valor Total</th>
            </tr>
        </thead>
        <tbody id="tabelaProdutosSelecionadosItens">
        </tbody>
    </table>


    <div class="modal fade" id="adicionarProdutoModal" tabindex="-1" aria-labelledby="adicionarProdutoModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">

                <div class="modal-header text-center mb-3">
                    <h5 class="modal-title w-100" id="adicionarProdutoModalLabel">Selecionar Produtos do Pedido</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>


                <div class="modal-body">

                    <!-- formulário para adicionar produtos -->
                    <form id="formAdicionarProduto">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selecionarTodos" />
                                    </th>
                                    <th>Produto</th>
                                    <th>Peso Líquido</th>
                                    <th>Preço Unitário</th>
                                    <th style="width: 15%;">Quantidade</th>
                                    <th style="width: 15%;">Peso Total</th>
                                    <th style="width: 15%;">Valor Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (lstProdutos != null && lstProdutos.Any())
                                {
                                    foreach (var produto in lstProdutos)
                                    {
                                        <tr>
                                            <td>
                                                <input type="checkbox" name="selectedProducts" value="@produto.Id" />
                                            </td>
                                            <td>@produto.Nome</td>
                                            <td>@produto.PesoLiquido</td>
                                            <td>@produto.PrecoUnitario</td>
                                            <td>
                                                <input type="number" class="form-control" name="quantidadeProduto" value="0" />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" name="pesoTotalProduto" readonly />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" name="valorTotalProduto" readonly />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">Não há produtos cadastrados para serem listados.</td>
                                    </tr>
                                }
                            </tbody>

                        </table>

                    </form>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-success me-auto">Adicionar</button>
                    <p style="font-weight: bold; display: inline;">Peso Total: <span id="totalPesoTotal"></span></p>
                    <span style="color: green; margin: 0 10px;">|</span>
                    <p style="font-weight: bold; display: inline;">Valor Total: <span id="totalValorTotal"></span></p>
                </div>

            </div>
        </div>
    </div>


    <div class="float-end mt-3">
        <button type="submit" class="btn btn-success" onclick="salvarPedido()">Salvar Pedido</button>
        <a asp-controller="Pedido" asp-action="Index" class="btn btn-secondary">Cancelar</a>
    </div>

</form>

@section Scripts {

    <script>
        document.addEventListener('DOMContentLoaded', function () {

            const selecionarTodos = document.getElementById('selecionarTodos');
            const checkboxes = document.querySelectorAll('input[name="selectedProducts"]');
            const quantidades = document.querySelectorAll('input[name="quantidadeProduto"]');
            const valorTotalPorLinha = document.querySelectorAll('input[name="valorTotalProduto"]');
            const valorPesoPorLinha = document.querySelectorAll('input[name="pesoTotalProduto"]');
            const totalValorTotal = document.getElementById('totalValorTotal');
            const totalPesoTotal = document.getElementById('totalPesoTotal');

            quantidades.forEach((quantidade, index) => {
                quantidade.addEventListener('input', () => {
                    calcularPesoTotalPorLinha(index, checkboxes, quantidades);
                    calcularValorPorLinha(index);
                    calcularValores();
                });

                quantidade.addEventListener('change', () => {
                    if (quantidade.value === '') {
                        quantidade.value = 0;
                    }
                    calcularPesoTotalPorLinha(index, checkboxes, quantidades);
                    calcularValorPorLinha(index);
                    calcularValores();
                });
            });

            // Evento de clique nos checkboxes individuais
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('click', function () {
                    if (!this.checked) {
                        selecionarTodos.checked = false;
                    } else {
                        const allChecked = Array.from(checkboxes).every(check => check.checked);
                        selecionarTodos.checked = allChecked;
                    }
                    calcularValores();
                });
            });

            // Evento de clique no checkbox Selecionar Todos
            selecionarTodos.addEventListener('click', function () {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
                calcularValores();
            });

            quantidades.forEach((quantidade, index) => {
                quantidade.addEventListener('input', () => {
                    calcularPesoTotalPorLinha(index, checkboxes, quantidades);
                    calcularValorPorLinha(index);
                    calcularValores();
                });
            });

            const adicionarProdutoModalButton = document.querySelector('[data-bs-target="#adicionarProdutoModal"]');

            adicionarProdutoModalButton.addEventListener('click', function () {
                quantidades.forEach((quantidade, index) => {
                    quantidade.value = 1; // Define o valor inicial como 1
                    calcularPesoTotalPorLinha(index, checkboxes, quantidades);
                    calcularValorPorLinha(index);
                });
                calcularValores();
            });

            // Função para calcular o valor total por linha
            function calcularValorPorLinha(index) {
                const row = checkboxes[index].closest('tr');
                const precoUnitario = parseFloat(row.cells[3].innerText);
                const quantidade = parseFloat(quantidades[index].value);

                if (!isNaN(quantidade) && quantidade !== '') {
                    const valorTotalProduto = precoUnitario * quantidade;
                    valorTotalPorLinha[index].value = valorTotalProduto.toFixed(2);
                } else {
                    valorTotalPorLinha[index].value = '';
                }
            }

            // Função para calcular os valores totais
            function calcularValores() {
                let totalGeral = 0;
                let pesoTotalGeral = 0;

                checkboxes.forEach((checkbox, index) => {
                    if (checkbox.checked) {
                        const valorTotalProduto = parseFloat(valorTotalPorLinha[index].value);
                        const pesoTotalProduto = parseFloat(valorPesoPorLinha[index].value);

                        if (!isNaN(valorTotalProduto) && !isNaN(pesoTotalProduto)) {
                            totalGeral += valorTotalProduto;
                            pesoTotalGeral += pesoTotalProduto;
                        }
                    }
                });

                totalValorTotal.innerText = formatReal(totalGeral);
                totalPesoTotal.innerText = formatPeso(pesoTotalGeral);
            }

            const formatReal = (value) => {
                return new Intl.NumberFormat('pt-BR', {
                    style: 'currency',
                    currency: 'BRL'
                }).format(value);
            };

            const formatPeso = (value) => {
                return new Intl.NumberFormat('pt-BR', {
                    style: 'unit',
                    unit: 'kilogram',
                    maximumFractionDigits: 2,
                }).format(value);
            };

            // Função para calcular o peso total por linha
            function calcularPesoTotalPorLinha(index, checkboxes, quantidades) {
                const row = checkboxes[index].closest('tr');
                const pesoLiquido = parseFloat(row.cells[2].innerText);
                const quantidade = parseFloat(quantidades[index].value);
                const campoPesoTotal = valorPesoPorLinha[index];

                if (!isNaN(quantidade) && quantidade !== '') {
                    const pesoTotal = pesoLiquido * quantidade;
                    campoPesoTotal.value = pesoTotal.toFixed(2);
                } else {
                    campoPesoTotal.value = '';
                }
            }

            const tabelaProdutosSelecionados = document.getElementById('tabelaProdutosSelecionadosItens');

            // Função para adicionar linha à tabela de produtos selecionados
            function adicionarLinhaTabela(codProduto, nomeProduto, quantidade, pesoTotal, valorTotal) {
                const newRow = tabelaProdutosSelecionados.insertRow();
                newRow.innerHTML = `
                                                               <td>${codProduto}</td>
                                                               <td>${nomeProduto}</td>
                                                               <td>${quantidade}</td>
                                                               <td>${pesoTotal}</td>
                                                               <td>${valorTotal}</td>
                                                           `;
            }

            function produtoSelecionado(codProduto, nomeProduto, quantidade, pesoTotal, valorTotal) {
                adicionarLinhaTabela(codProduto, nomeProduto, quantidade, pesoTotal, valorTotal);
            }


            const adicionarButton = document.querySelector('#adicionarProdutoModal button[type="submit"]');

            adicionarButton.addEventListener('click', function (event) {
                event.preventDefault();

                //Limpar tabela antes de popular ela novamente
                tabelaProdutosSelecionados.innerHTML = '';

                const checkboxes = document.querySelectorAll('#adicionarProdutoModal input[name="selectedProducts"]:checked');

                // Coleta os dados dos produtos selecionados no modal
                const produtosSelecionados = [];
                checkboxes.forEach(checkbox => {
                    const row = checkbox.closest('tr');
                    const codProduto = checkbox.value;
                    const nomeProduto = row.cells[1].innerText;
                    const quantidade = row.querySelector('input[name="quantidadeProduto"]').value;
                    const pesoTotal = formatPeso(row.querySelector('input[name="pesoTotalProduto"]').value);
                    const valorTotal = formatReal(row.querySelector('input[name="valorTotalProduto"]').value);

                    produtosSelecionados.push({
                        codProduto,
                        nomeProduto,
                        quantidade,
                        pesoTotal,
                        valorTotal,
                    });
                });

                produtosSelecionados.forEach(produto => {
                    adicionarLinhaTabela(
                        produto.codProduto,
                        produto.nomeProduto,
                        produto.quantidade,
                        produto.pesoTotal,
                        produto.valorTotal
                    );
                });

                // Depois de adicionar dados à tabela, exibe o corpo da tabela se houver pelo menos uma linha
                if (document.querySelectorAll('#tabelaProdutosSelecionados tbody tr').length > 0) {
                    document.getElementById('tabelaProdutosSelecionados').style.display = 'table';
                }

                const modal = document.getElementById('adicionarProdutoModal');
                const modalBS = bootstrap.Modal.getInstance(modal);

                const pesoTotal = document.getElementById('totalPesoTotal').innerText;
                const valorTotal = document.getElementById('totalValorTotal').innerText;

                document.getElementById('pesoTotalCampo').value = pesoTotal;
                document.getElementById('valorTotalCampo').value = valorTotal;
                modalBS.hide();
            });

        });


        function salvarPedido() {

            const mensagemErroElement = document.getElementById('mensagemErro');
            mensagemErroElement.classList.add('d-none');

            const clienteSelecionado = document.getElementById('IdCliente').value;
            if (clienteSelecionado.trim() === '') {
                mensagemErroElement.innerText = 'Por favor, selecione um cliente.';
                mensagemErroElement.classList.remove('d-none');
                return;
            }

            // Obtendo os campos de Peso Total, Valor Total e Descrição
            const totalPeso = document.getElementById('totalPesoTotal').innerText;
            const totalValor = document.getElementById('totalValorTotal').innerText;
            const descricao = document.getElementById('Observacao').value;

            // Verificando se a tabela de produtos está vazia
            const tabelaProdutos = document.getElementById('tabelaProdutosSelecionadosItens');
            const linhasTabela = tabelaProdutos.getElementsByTagName('tr');
            const produtosSelecionados = [];

            if (linhasTabela.length === 0) {
                mensagemErroElement.innerText = 'Por favor, preencha a tabela de produtos antes de salvar.';
                mensagemErroElement.classList.remove('d-none');
                return;
            }

            // Itera pelas linhas da tabela e coleta os dados
            for (let i = 0; i < linhasTabela.length; i++) {
                const row = linhasTabela[i];
                const cells = row.getElementsByTagName('td');
                const ProdutoId = cells[0].innerText;
                const nomeProduto = cells[1].innerText;
                const Quantidade = cells[2].innerText;
                const PesoTotal = cells[3].innerText;
                const ValorTotal = cells[4].innerText;

                produtosSelecionados.push({
                    ProdutoId,
                    nomeProduto,
                    Quantidade,
                    PesoTotal,
                    ValorTotal,
                });
            }

            const dadosPedido = {
                ClienteId: clienteSelecionado,
                PesoTotalPedido: totalPeso,
                PrecoTotalPedido: totalValor,
                Observacao: descricao,
            };

            // Envia os dados para o servidor usando o POST
            $.post('/Pedido/SalvarPedido', { pedido: dadosPedido, produtos: produtosSelecionados })
                .done(function (data) {
                    Swal.fire({
                        title: "Pedido Concluído!",
                        text: "Cadastro realizado com sucesso",
                        icon: "success",
                        confirmButtonColor: "#5cb85c",
                        timer: 3000,
                    }).then(function () {
                        location.href = "/Pedido/Index";
                    });
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    console.error('Erro ao salvar o pedido:', errorThrown);
                    mensagemErroElement.text('Erro ao salvar o pedido. Por favor, tente novamente mais tarde.');
                    mensagemErroElement.removeClass('d-none');
                });
        }

    </script>
}
